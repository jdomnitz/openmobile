/*********************************************************************************
    This file is part of Open Mobile.

    Open Mobile is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Open Mobile is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Open Mobile.  If not, see <http://www.gnu.org/licenses/>.
 
    There is one additional restriction when using this framework regardless of modifications to it.
    The About Panel or its contents must be easily accessible by the end users.
    This is to ensure all project contributors are given due credit not only in the source code.
*********************************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using OpenMobile;
using OpenMobile.Plugin;
using OpenMobile.Controls;
using OpenMobile.Graphics;
using OpenMobile.Data;
using OpenMobile.helperFunctions;

namespace OpenMobile.Zones
{
    /// <summary>
    /// Methods for controlling zones
    /// </summary>
    public class ZoneHandling
    {
        private List<Zone> _Zones = new List<Zone>();

        /// <summary>
        /// Register a new zone (must be uniqe)
        /// </summary>
        /// <param name="zone"></param>
        /// <returns></returns>
        public bool Add(Zone zone)
        {
            // See if this zone already exists
            Zone z = _Zones.Find(a => a.Name == zone.Name);
            if (z != null)
                return false;   // No, return error

            // New zone, add it
            _Zones.Add(zone);

            // All good, return true
            return true;
        }

        public Zone this[string Name]
        {
            get
            {
                return null;
            }
        }

        /// <summary>
        /// Initializes and starts zones
        /// </summary>
        public void Start()
        {
            // Restore settings from database (deserialize)
            bool SetToDefault = false;
            string XML = StoredData.Get("System.Zones");
            if (!string.IsNullOrEmpty(XML))
            {
                try
                {
                    _Zones = OpenMobile.helperFunctions.XML.Serializer.fromXML<List<Zone>>(XML);
                }
                catch
                {   // Error while loading, reset to defaults
                    SetToDefault = false;
                }
                if (_Zones.Count == 0)
                    SetToDefault = true;
            }
            else
            {   // No setting can be read from database, set to default
                SetToDefault = true;
            }

            if (SetToDefault)
            {
                // Create default zones
                //_Zones.Add(new Zone("Default",0,

                //TODO: Figure out a way to handle multiple screens and audiodevices

                // Currently only one screen/device pr zone is supported
                // Create one default zone pr screen (default zone uses default audiodevice)
                for (int i = 0; i < BuiltInComponents.Host.ScreenCount; i++)
                {
                    Zone ScreenZone = new Zone("Default" + i.ToString(), i, 0);
                    ScreenZone.AutoGenerated = true;
                    _Zones.Add(ScreenZone);
                }
            }

            // Create zone for "all"
            UpdateZoneAll();
        }

        public void UpdateZoneAll()
        {
            // Try to find zone named "All"
            Zone ZoneAll = _Zones.Find(a => a.Name == "All");
            _Zones.Remove(ZoneAll);

            if (ZoneAll == null)
            {
                Zone ScreenZone = new Zone("All", 0, 0);
                ScreenZone.AutoGenerated = true;

                // Add all other zones to this zone
                foreach (Zone z in _Zones)
                    ScreenZone.Add(z);

                // Add new zone for All
                _Zones.Add(ScreenZone);
            }
        }

        /// <summary>
        /// Save zone to database
        /// </summary>
        public void Save()
        {
            // Save data
            StoredData.Set("System.Zones", OpenMobile.helperFunctions.XML.Serializer.toXML(_Zones));
        }

        /// <summary>
        /// Stop and clean zones
        /// </summary>
        public void Stop()
        {
            // Save data
            //StoredData.Set("System.Zones", OpenMobile.helperFunctions.XML.Serializer.toXML(_Zones));
        }
    }
}
